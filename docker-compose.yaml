version: '3'

networks:
  app-tier:
    driver: bridge

volumes:
  minio-data:
    driver: local
  db-data:
    driver: local
  es_data:
    driver: local
  grafana-data:
    driver: local

services:
  qaprotours:
    build:
      context: .
    container_name: qaprotours
    ports:
      - '8080:8080'
    depends_on:
      - postgres
      - minio
    env_file:
      - .env
    networks:
      - app-tier

  postgres:
    image: 'postgres:15.1-alpine'
    container_name: qaprotours-db
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - app-tier
    volumes:
      - db-data:/var/lib/postgresql/data

  minio:
    image: minio/minio:latest
    container_name: qaprotours-minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
    command: server ~/minio --console-address :9090
    ports:
      - '9000:9000'
      - '9090:9090'
    networks:
      - app-tier
    volumes:
      - minio-data:/minio

  nginx:
    image: nginx:latest
    container_name: qaprotours-nginx
    volumes:
      - ./nginx:/etc/nginx/conf.d/
    depends_on:
      - app
      - minio
    ports:
      - '80:80'
    networks:
      - app-tier

  elasticsearch:
    image: elasticsearch:8.7.1
    container_name: qaprotours-elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - target: 9200
        published: 9200
    networks:
      - app-tier

  kibana:
    image: kibana:8.7.1
    container_name: qaprotours-kibana
    ports:
      - target: 5601
        published: 5601
    depends_on:
      - elasticsearch
    networks:
      - app-tier

  grafana:
    image: grafana/grafana:8.2.6
    container_name: qaprotours-grafana
    ports:
      - '3000:3000'
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - app-tier

  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: qaprotours-prometheus
    ports:
      - '9091:9090'
    volumes:
      - ./prometheus:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    networks:
      - app-tier